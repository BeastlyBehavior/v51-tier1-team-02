
const h1 = document.querySelector('#h1text');
console.log(h1);

const addUserButton = document.querySelector('#add-user');
console.log(addUserButton);

const addUserForm = document.querySelector('#add-user-form');
console.log(addUserForm);

const submitUserButton = document.querySelector('#submit-user');
console.log(submitUserButton);

const closeButton = document.querySelector('#form-close');
console.log(closeButton);

h1.classList.add("active");

addUserButton.classList.add("active");

//event where once the button is clicked, a modal form pops up
function openUserForm () {
    addUserButton.onclick = function () {
        addUserForm.classList.remove('hidden');
        addUserForm.classList.add('show-user-form');

        //alert('the button works');

    }
}; 

openUserForm();

function closeUserForm () {
    closeButton.onclick = function () {
        addUserForm.classList.remove('show-user-form');
        addUserForm.classList.add('hidden');
    }
};

closeUserForm();

//tomorrow, we add the text inputs (and maybe picture input). 
//then have the inputs show on a div on the screen after pressing "submit"

const profilePic = document.querySelector('#profile-picture');

const username = document.querySelector('#username');
const usernameInput = username.value;
//console.log(usernameInput);


/* function example() {
  const username1 = document.querySelector('#username').value;
  console.log(username1);

  const orangeDiv = document.querySelector('#example-name');
  orangeDiv.innerText = username1.value;
  //value is showing up as undefined
  //alert(`hello, your username is ${username1}`);
};
example(); */

/* function submitUser () {
  submitUserButton.onclick = function () {
    const username1 = document.getElementById("username").value;

    alert(`hello, your username is ${username1}`);
    console.log(username1);
  }
}; 

submitUser();  */

const getInformation = document.getElementById("get-information");
getInformation.addEventListener("submit", (e) => {
  e.preventDefault() //this prevents the page from refreshing
  console.log(`${/*dont know what to put here*/} has been submitted!`);
});

//maybe the .value stuff will work now that its not refreshing
//once we figure that stuff out, we can make a function to putt he key value pairs into a string


//thatll have the profile picture, first name, autogenerated id***
//itll have a submit button (through a click event- this adds the variable to the list as an item)
//when submitted, an alert pops up saying "${name} was added to the group"
//have the info arranged in a way where the picture is on top and the name is on bottom

/*



      
     
    
      //closes modal1, modal2, or modal3 when overlay is clicked
      function closeModal () {
        modal1.onclick = function() {
          if (modal1.classList.contains("active")) {
            modal1.classList.remove("active")
            //start scrolling
            document.body.classList.
            add("scrollable-place");
            } 
          };
        }
        closeModal();

    </script> */

// Add Event
let events = [
  { name: "Movie", eventID: 1234, expense: 100 },
  { name: "Dinner Party", eventID: 1235, expense: 200 },
  { name: "Ski Tip", eventID: 12534, expense: 300 },
];
const addEvent = document.getElementById("addEvent");
const eventContainer = document.getElementById("eventContainer");

let group = []; /* array for push expense group  */

// display array
function renderEvents() {
  eventContainer.innerHTML = "";

  // loop through the events and create a list
  const row = document.getElementById("events-list");
  row.innerHTML = "";

  // Loop through the events and create a list
  events.forEach((event, index) => {
    const eventItem = document.createElement("li");
    eventItem.textContent = event.name;
    const deleteEventButton = document.createElement("button");
    deleteEventButton.type = "button";
    deleteEventButton.textContent = "X";

    // event listener for when an event is clicked should render modify page
    const eventMods = document.getElementById("event-modifications");

    eventItem.addEventListener("click", () => {
      console.log(`${event.name} clicked`);
      eventMods.innerHTML = "";
      const eventHeader = document.createElement("h2");
      eventHeader.textContent = `${event.name}`;
      eventMods.appendChild(eventHeader);
    });

    // event listener to delete the event from the main page
    deleteEventButton.addEventListener("click", () => {
      const eventDeleteWarning = document.createElement("p");
      eventDeleteWarning.textContent = `Are you sure you want to delete the ${event.name} event?`;
      eventDeleteWarning.classList.add("warning-text");

      // Create a "yes" button
      const yesDeleteButton = document.createElement("button");
      yesDeleteButton.type = "button";
      yesDeleteButton.textContent = "Yes";

      // handle the delete action on the "yes" click
      yesDeleteButton.addEventListener("click", function () {
        events.splice(index, 1);
        renderEvents();
      });
      // Create and handle the "no" button
      const noDeleteButton = document.createElement("button");
      noDeleteButton.type = "button";
      noDeleteButton.textContent = "No";
      noDeleteButton.addEventListener("click", function () {
        row.removeChild(eventDeleteWarning);
        row.removeChild(yesDeleteButton);
        row.removeChild(noDeleteButton);
      });
      // append the warning and the yes/no buttons
      row.appendChild(eventDeleteWarning);
      row.appendChild(yesDeleteButton);
      row.appendChild(noDeleteButton);
    });
    // append the event list and the delete buttons
    row.appendChild(eventItem);
    row.appendChild(deleteEventButton);
  });
}
// Render the events table on refresh
renderEvents();

// Click the add button to add an event
addEvent.addEventListener("click", () => {
  console.log("clicked");

  // Create a new input element
  const eventInputBox = document.createElement("input");
  eventInputBox.type = "text";
  eventInputBox.placeholder = "Enter event name";
  const eventInputButton = document.createElement("button");
  eventInputButton.type = "button";
  eventInputButton.textContent = "Add";

  eventInputButton.addEventListener("click", () => {
    const eventName = eventInputBox.value;
    let value = parseFloat(
      document.getElementById("expense-input").value
    ); /* expense input */
    if (eventName) {
      const newEvent = { name: eventName, eventID: Date.now(), expense: value };
      group.push(newEvent); /* for expense div */
      events.push(newEvent); // Add event to the array
      console.log("Event add:", newEvent.name);
      console.log("Event ID:", newEvent.eventID);
      eventInputBox.value = "";
      renderEvents();
      expenseDiv(); /* expense function */
    }
  });
  // Append the input box to the container
  eventContainer.appendChild(eventInputBox);
  eventContainer.appendChild(eventInputButton);
});

/**************************************************/

// Expense functions
let display = [];
function expenseDiv() {
  group.forEach((item, index) => {
    display = `
    <div class="expense-container">
        <h3>Event: ${item.name}</h3>
        <span> $${item.expense}</span>
        <button onclick=(${deleteBtn()}) id="delete-btn">Delete</button>
        <button id="edit-btn" >Edit</button>
        <p>${index}</p>
    </div>
    `;
  });

  document.getElementById("result").innerHTML += display;

  function deleteBtn() {
    console.log("hi");
  }
}

/**************************************************/

